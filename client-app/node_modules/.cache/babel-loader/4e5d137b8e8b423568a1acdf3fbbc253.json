{"ast":null,"code":"function _toConsumableArray(arr) {\n  return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread();\n}\n\nfunction _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance\");\n}\n\nfunction _iterableToArray(iter) {\n  if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter);\n}\n\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) {\n      arr2[i] = arr[i];\n    }\n\n    return arr2;\n  }\n}\n\nfunction _slicedToArray(arr, i) {\n  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest();\n}\n\nfunction _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n}\n\nfunction _iterableToArrayLimit(arr, i) {\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}\n\nfunction _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n    var ownKeys = Object.keys(source);\n\n    if (typeof Object.getOwnPropertySymbols === 'function') {\n      ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(source, sym).enumerable;\n      }));\n    }\n\n    ownKeys.forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    });\n  }\n\n  return target;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _typeof(obj) {\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n/* eslint prefer-template: 0 */\n\n\nimport React, { forwardRef, Fragment, useCallback, useEffect, useMemo, useReducer, useRef, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { fromEvent } from 'file-selector';\nimport { allFilesAccepted, composeEventHandlers, fileAccepted, fileMatchSize, isEvtWithFiles, isIeOrEdge, isPropagationStopped, onDocumentDragOver } from './utils/index';\n/**\n * Convenience wrapper component for the `useDropzone` hook\n *\n * ```jsx\n * <Dropzone>\n *   {({getRootProps, getInputProps}) => (\n *     <div {...getRootProps()}>\n *       <input {...getInputProps()} />\n *       <p>Drag 'n' drop some files here, or click to select files</p>\n *     </div>\n *   )}\n * </Dropzone>\n * ```\n */\n\nvar Dropzone = forwardRef(function (_ref, ref) {\n  var children = _ref.children,\n      params = _objectWithoutProperties(_ref, [\"children\"]);\n\n  var _useDropzone = useDropzone(params),\n      open = _useDropzone.open,\n      props = _objectWithoutProperties(_useDropzone, [\"open\"]);\n\n  useEffect(function () {\n    if (typeof ref === 'function') {\n      ref({\n        open: open\n      });\n    } else if (_typeof(ref) === 'object' && ref !== null) {\n      ref.current = {\n        open: open\n      };\n    }\n\n    return function () {\n      if (typeof ref === 'function') {\n        ref(null);\n      } else if (_typeof(ref) === 'object' && ref !== null) {\n        ref.current = null;\n      }\n    };\n  }, [ref]); // TODO: Figure out why react-styleguidist cannot create docs if we don't return a jsx element\n\n  return React.createElement(Fragment, null, children(_objectSpread({}, props, {\n    open: open\n  })));\n});\nDropzone.displayName = 'Dropzone';\nDropzone.propTypes = {\n  /**\n   * Render function that exposes the dropzone state and prop getter fns\n   *\n   * @param {object} params\n   * @param {Function} params.getRootProps Returns the props you should apply to the root drop container you render\n   * @param {Function} params.getInputProps Returns the props you should apply to hidden file input you render\n   * @param {Function} params.open Open the native file selection dialog\n   * @param {boolean} params.isFocused Dropzone area is in focus\n   * @param {boolean} params.isFileDialogActive File dialog is opened\n   * @param {boolean} params.isDragActive Active drag is in progress\n   * @param {boolean} params.isDragAccept Dragged files are accepted\n   * @param {boolean} params.isDragReject Some dragged files are rejected\n   * @param {File[]} params.draggedFiles Files in active drag\n   * @param {File[]} params.acceptedFiles Accepted files\n   * @param {File[]} params.rejectedFiles Rejected files\n   */\n  children: PropTypes.func,\n\n  /**\n   * Set accepted file types.\n   * See https://github.com/okonet/attr-accept for more information.\n   * Keep in mind that mime type determination is not reliable across platforms. CSV files,\n   * for example, are reported as text/plain under macOS but as application/vnd.ms-excel under\n   * Windows. In some cases there might not be a mime type set at all.\n   * See: https://github.com/react-dropzone/react-dropzone/issues/276\n   */\n  accept: PropTypes.oneOfType([PropTypes.string, PropTypes.arrayOf(PropTypes.string)]),\n\n  /**\n   * Allow drag 'n' drop (or selection from the file dialog) of multiple files\n   */\n  multiple: PropTypes.bool,\n\n  /**\n   * If false, allow dropped items to take over the current browser window\n   */\n  preventDropOnDocument: PropTypes.bool,\n\n  /**\n   * If true, disables click to open the native file selection dialog\n   */\n  noClick: PropTypes.bool,\n\n  /**\n   * If true, disables SPACE/ENTER to open the native file selection dialog.\n   * Note that it also stops tracking the focus state.\n   */\n  noKeyboard: PropTypes.bool,\n\n  /**\n   * If true, disables drag 'n' drop\n   */\n  noDrag: PropTypes.bool,\n\n  /**\n   * If true, stops drag event propagation to parents\n   */\n  noDragEventsBubbling: PropTypes.bool,\n\n  /**\n   * Minimum file size (in bytes)\n   */\n  minSize: PropTypes.number,\n\n  /**\n   * Maximum file size (in bytes)\n   */\n  maxSize: PropTypes.number,\n\n  /**\n   * Enable/disable the dropzone\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * Use this to provide a custom file aggregator\n   *\n   * @param {(DragEvent|Event)} event A drag event or input change event (if files were selected via the file dialog)\n   */\n  getFilesFromEvent: PropTypes.func,\n\n  /**\n   * Cb for when closing the file dialog with no selection\n   */\n  onFileDialogCancel: PropTypes.func,\n\n  /**\n   * Cb for when the `dragenter` event occurs.\n   *\n   * @param {DragEvent} event\n   */\n  onDragEnter: PropTypes.func,\n\n  /**\n   * Cb for when the `dragleave` event occurs\n   *\n   * @param {DragEvent} event\n   */\n  onDragLeave: PropTypes.func,\n\n  /**\n   * Cb for when the `dragover` event occurs\n   *\n   * @param {DragEvent} event\n   */\n  onDragOver: PropTypes.func,\n\n  /**\n   * Cb for when the `drop` event occurs.\n   * Note that this callback is invoked after the `getFilesFromEvent` callback is done.\n   *\n   * Files are accepted or rejected based on the `accept`, `multiple`, `minSize` and `maxSize` props.\n   * `accept` must be a valid [MIME type](http://www.iana.org/assignments/media-types/media-types.xhtml) according to [input element specification](https://www.w3.org/wiki/HTML/Elements/input/file) or a valid file extension.\n   * If `multiple` is set to false and additional files are droppped,\n   * all files besides the first will be rejected.\n   * Any file which does not have a size in the [`minSize`, `maxSize`] range, will be rejected as well.\n   *\n   * Note that the `onDrop` callback will always be invoked regardless if the dropped files were accepted or rejected.\n   * If you'd like to react to a specific scenario, use the `onDropAccepted`/`onDropRejected` props.\n   *\n   * `onDrop` will provide you with an array of [File](https://developer.mozilla.org/en-US/docs/Web/API/File) objects which you can then process and send to a server.\n   * For example, with [SuperAgent](https://github.com/visionmedia/superagent) as a http/ajax library:\n   *\n   * ```js\n   * function onDrop(acceptedFiles) {\n   *   const req = request.post('/upload')\n   *   acceptedFiles.forEach(file => {\n   *     req.attach(file.name, file)\n   *   })\n   *   req.end(callback)\n   * }\n   * ```\n   *\n   * @param {File[]} acceptedFiles\n   * @param {File[]} rejectedFiles\n   * @param {(DragEvent|Event)} event A drag event or input change event (if files were selected via the file dialog)\n   */\n  onDrop: PropTypes.func,\n\n  /**\n   * Cb for when the `drop` event occurs.\n   * Note that if no files are accepted, this callback is not invoked.\n   *\n   * @param {File[]} files\n   * @param {(DragEvent|Event)} event\n   */\n  onDropAccepted: PropTypes.func,\n\n  /**\n   * Cb for when the `drop` event occurs.\n   * Note that if no files are rejected, this callback is not invoked.\n   *\n   * @param {object[]} files\n   * @param {(DragEvent|Event)} event\n   */\n  onDropRejected: PropTypes.func\n};\nexport default Dropzone;\n/**\n * A function that is invoked for the `dragenter`,\n * `dragover` and `dragleave` events.\n * It is not invoked if the items are not files (such as link, text, etc.).\n *\n * @callback dragCb\n * @param {DragEvent} event\n */\n\n/**\n * A function that is invoked for the `drop` or input change event.\n * It is not invoked if the items are not files (such as link, text, etc.).\n *\n * @callback dropCb\n * @param {File[]} acceptedFiles List of accepted files\n * @param {File[]} rejectedFiles List of rejected files\n * @param {(DragEvent|Event)} event A drag event or input change event (if files were selected via the file dialog)\n */\n\n/**\n * A function that is invoked for the `drop` or input change event.\n * It is not invoked if the items are files (such as link, text, etc.).\n *\n * @callback dropAcceptedCb\n * @param {File[]} files List of accepted files that meet the given criteria\n * (`accept`, `multiple`, `minSize`, `maxSize`)\n * @param {(DragEvent|Event)} event A drag event or input change event (if files were selected via the file dialog)\n */\n\n/**\n * A function that is invoked for the `drop` or input change event.\n *\n * @callback dropRejectedCb\n * @param {File[]} files List of rejected files that do not meet the given criteria\n * (`accept`, `multiple`, `minSize`, `maxSize`)\n * @param {(DragEvent|Event)} event A drag event or input change event (if files were selected via the file dialog)\n */\n\n/**\n * A function that is used aggregate files,\n * in a asynchronous fashion, from drag or input change events.\n *\n * @callback getFilesFromEvent\n * @param {(DragEvent|Event)} event A drag event or input change event (if files were selected via the file dialog)\n * @returns {(File[]|Promise<File[]>)}\n */\n\n/**\n * An object with the current dropzone state and some helper functions.\n *\n * @typedef {object} DropzoneState\n * @property {Function} getRootProps Returns the props you should apply to the root drop container you render\n * @property {Function} getInputProps Returns the props you should apply to hidden file input you render\n * @property {Function} open Open the native file selection dialog\n * @property {boolean} isFocused Dropzone area is in focus\n * @property {boolean} isFileDialogActive File dialog is opened\n * @property {boolean} isDragActive Active drag is in progress\n * @property {boolean} isDragAccept Dragged files are accepted\n * @property {boolean} isDragReject Some dragged files are rejected\n * @property {File[]} draggedFiles Files in active drag\n * @property {File[]} acceptedFiles Accepted files\n * @property {File[]} rejectedFiles Rejected files\n */\n\nvar initialState = {\n  isFocused: false,\n  isFileDialogActive: false,\n  isDragActive: false,\n  isDragAccept: false,\n  isDragReject: false,\n  draggedFiles: [],\n  acceptedFiles: [],\n  rejectedFiles: []\n  /**\n   * A React hook that creates a drag 'n' drop area.\n   *\n   * ```jsx\n   * function MyDropzone(props) {\n   *   const {getRootProps, getInputProps} = useDropzone({\n   *     onDrop: acceptedFiles => {\n   *       // do something with the File objects, e.g. upload to some server\n   *     }\n   *   });\n   *   return (\n   *     <div {...getRootProps()}>\n   *       <input {...getInputProps()} />\n   *       <p>Drag and drop some files here, or click to select files</p>\n   *     </div>\n   *   )\n   * }\n   * ```\n   *\n   * @function useDropzone\n   *\n   * @param {object} props\n   * @param {string|string[]} [props.accept] Set accepted file types.\n   * See https://github.com/okonet/attr-accept for more information.\n   * Keep in mind that mime type determination is not reliable across platforms. CSV files,\n   * for example, are reported as text/plain under macOS but as application/vnd.ms-excel under\n   * Windows. In some cases there might not be a mime type set at all.\n   * See: https://github.com/react-dropzone/react-dropzone/issues/276\n   * @param {boolean} [props.multiple=true] Allow drag 'n' drop (or selection from the file dialog) of multiple files\n   * @param {boolean} [props.preventDropOnDocument=true] If false, allow dropped items to take over the current browser window\n   * @param {boolean} [props.noClick=false] If true, disables click to open the native file selection dialog\n   * @param {boolean} [props.noKeyboard=false] If true, disables SPACE/ENTER to open the native file selection dialog.\n   * Note that it also stops tracking the focus state.\n   * @param {boolean} [props.noDrag=false] If true, disables drag 'n' drop\n   * @param {boolean} [props.noDragEventsBubbling=false] If true, stops drag event propagation to parents\n   * @param {number} [props.minSize=0] Minimum file size (in bytes)\n   * @param {number} [props.maxSize=Infinity] Maximum file size (in bytes)\n   * @param {boolean} [props.disabled=false] Enable/disable the dropzone\n   * @param {getFilesFromEvent} [props.getFilesFromEvent] Use this to provide a custom file aggregator\n   * @param {Function} [props.onFileDialogCancel] Cb for when closing the file dialog with no selection\n   * @param {dragCb} [props.onDragEnter] Cb for when the `dragenter` event occurs.\n   * @param {dragCb} [props.onDragLeave] Cb for when the `dragleave` event occurs\n   * @param {dragCb} [props.onDragOver] Cb for when the `dragover` event occurs\n   * @param {dropCb} [props.onDrop] Cb for when the `drop` event occurs.\n   * Note that this callback is invoked after the `getFilesFromEvent` callback is done.\n   *\n   * Files are accepted or rejected based on the `accept`, `multiple`, `minSize` and `maxSize` props.\n   * `accept` must be a valid [MIME type](http://www.iana.org/assignments/media-types/media-types.xhtml) according to [input element specification](https://www.w3.org/wiki/HTML/Elements/input/file) or a valid file extension.\n   * If `multiple` is set to false and additional files are droppped,\n   * all files besides the first will be rejected.\n   * Any file which does not have a size in the [`minSize`, `maxSize`] range, will be rejected as well.\n   *\n   * Note that the `onDrop` callback will always be invoked regardless if the dropped files were accepted or rejected.\n   * If you'd like to react to a specific scenario, use the `onDropAccepted`/`onDropRejected` props.\n   *\n   * `onDrop` will provide you with an array of [File](https://developer.mozilla.org/en-US/docs/Web/API/File) objects which you can then process and send to a server.\n   * For example, with [SuperAgent](https://github.com/visionmedia/superagent) as a http/ajax library:\n   *\n   * ```js\n   * function onDrop(acceptedFiles) {\n   *   const req = request.post('/upload')\n   *   acceptedFiles.forEach(file => {\n   *     req.attach(file.name, file)\n   *   })\n   *   req.end(callback)\n   * }\n   * ```\n   * @param {dropAcceptedCb} [props.onDropAccepted]\n   * @param {dropRejectedCb} [props.onDropRejected]\n   *\n   * @returns {DropzoneState}\n   */\n\n};\nexport function useDropzone() {\n  var _ref2 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n      accept = _ref2.accept,\n      _ref2$disabled = _ref2.disabled,\n      disabled = _ref2$disabled === void 0 ? false : _ref2$disabled,\n      _ref2$getFilesFromEve = _ref2.getFilesFromEvent,\n      getFilesFromEvent = _ref2$getFilesFromEve === void 0 ? fromEvent : _ref2$getFilesFromEve,\n      _ref2$maxSize = _ref2.maxSize,\n      maxSize = _ref2$maxSize === void 0 ? Infinity : _ref2$maxSize,\n      _ref2$minSize = _ref2.minSize,\n      minSize = _ref2$minSize === void 0 ? 0 : _ref2$minSize,\n      _ref2$multiple = _ref2.multiple,\n      multiple = _ref2$multiple === void 0 ? true : _ref2$multiple,\n      onDragEnter = _ref2.onDragEnter,\n      onDragLeave = _ref2.onDragLeave,\n      onDragOver = _ref2.onDragOver,\n      onDrop = _ref2.onDrop,\n      onDropAccepted = _ref2.onDropAccepted,\n      onDropRejected = _ref2.onDropRejected,\n      onFileDialogCancel = _ref2.onFileDialogCancel,\n      _ref2$preventDropOnDo = _ref2.preventDropOnDocument,\n      preventDropOnDocument = _ref2$preventDropOnDo === void 0 ? true : _ref2$preventDropOnDo,\n      _ref2$noClick = _ref2.noClick,\n      noClick = _ref2$noClick === void 0 ? false : _ref2$noClick,\n      _ref2$noKeyboard = _ref2.noKeyboard,\n      noKeyboard = _ref2$noKeyboard === void 0 ? false : _ref2$noKeyboard,\n      _ref2$noDrag = _ref2.noDrag,\n      noDrag = _ref2$noDrag === void 0 ? false : _ref2$noDrag,\n      _ref2$noDragEventsBub = _ref2.noDragEventsBubbling,\n      noDragEventsBubbling = _ref2$noDragEventsBub === void 0 ? false : _ref2$noDragEventsBub;\n\n  var rootRef = useRef(null);\n  var inputRef = useRef(null);\n\n  var _useReducer = useReducer(reducer, initialState),\n      _useReducer2 = _slicedToArray(_useReducer, 2),\n      state = _useReducer2[0],\n      dispatch = _useReducer2[1];\n\n  var isFocused = state.isFocused,\n      isFileDialogActive = state.isFileDialogActive,\n      draggedFiles = state.draggedFiles; // Fn for opening the file dialog programmatically\n\n  var openFileDialog = function openFileDialog() {\n    if (inputRef.current) {\n      dispatch({\n        type: 'openDialog'\n      });\n      inputRef.current.value = null;\n      inputRef.current.click();\n    }\n  }; // Update file dialog active state when the window is focused on\n\n\n  var onWindowFocus = function onWindowFocus() {\n    // Execute the timeout only if the file dialog is opened in the browser\n    if (isFileDialogActive) {\n      setTimeout(function () {\n        if (inputRef.current) {\n          var files = inputRef.current.files;\n\n          if (!files.length) {\n            dispatch({\n              type: 'closeDialog'\n            });\n\n            if (typeof onFileDialogCancel === 'function') {\n              onFileDialogCancel();\n            }\n          }\n        }\n      }, 300);\n    }\n  };\n\n  useEffect(function () {\n    window.addEventListener('focus', onWindowFocus, false);\n    return function () {\n      window.removeEventListener('focus', onWindowFocus, false);\n    };\n  }, [inputRef, isFileDialogActive, onFileDialogCancel]); // Cb to open the file dialog when SPACE/ENTER occurs on the dropzone\n\n  var onKeyDownCb = useCallback(function (event) {\n    // Ignore keyboard events bubbling up the DOM tree\n    if (!rootRef.current || !rootRef.current.isEqualNode(event.target)) {\n      return;\n    }\n\n    if (event.keyCode === 32 || event.keyCode === 13) {\n      event.preventDefault();\n      openFileDialog();\n    }\n  }, [rootRef, inputRef]); // Update focus state for the dropzone\n\n  var onFocusCb = useCallback(function () {\n    dispatch({\n      type: 'focus'\n    });\n  }, []);\n  var onBlurCb = useCallback(function () {\n    dispatch({\n      type: 'blur'\n    });\n  }, []); // Cb to open the file dialog when click occurs on the dropzone\n\n  var onClickCb = useCallback(function () {\n    if (noClick) {\n      return;\n    } // In IE11/Edge the file-browser dialog is blocking, therefore, use setTimeout()\n    // to ensure React can handle state changes\n    // See: https://github.com/react-dropzone/react-dropzone/issues/450\n\n\n    if (isIeOrEdge()) {\n      setTimeout(openFileDialog, 0);\n    } else {\n      openFileDialog();\n    }\n  }, [inputRef, noClick]);\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      dragTargets = _useState2[0],\n      setDragTargets = _useState2[1];\n\n  var onDocumentDrop = function onDocumentDrop(event) {\n    if (rootRef.current && rootRef.current.contains(event.target)) {\n      // If we intercepted an event for our instance, let it propagate down to the instance's onDrop handler\n      return;\n    }\n\n    event.preventDefault();\n    setDragTargets([]);\n  };\n\n  useEffect(function () {\n    if (preventDropOnDocument) {\n      document.addEventListener('dragover', onDocumentDragOver, false);\n      document.addEventListener('drop', onDocumentDrop, false);\n    }\n\n    return function () {\n      if (preventDropOnDocument) {\n        document.removeEventListener('dragover', onDocumentDragOver);\n        document.removeEventListener('drop', onDocumentDrop);\n      }\n    };\n  }, [rootRef, preventDropOnDocument]);\n  var onDragEnterCb = useCallback(function (event) {\n    event.preventDefault(); // Persist here because we need the event later after getFilesFromEvent() is done\n\n    event.persist();\n    stopPropagation(event); // Count the dropzone and any children that are entered.\n\n    if (dragTargets.indexOf(event.target) === -1) {\n      setDragTargets([].concat(_toConsumableArray(dragTargets), [event.target]));\n    }\n\n    if (isEvtWithFiles(event)) {\n      Promise.resolve(getFilesFromEvent(event)).then(function (draggedFiles) {\n        if (isPropagationStopped(event) && !noDragEventsBubbling) {\n          return;\n        }\n\n        dispatch({\n          draggedFiles: draggedFiles,\n          isDragActive: true,\n          type: 'setDraggedFiles'\n        });\n\n        if (onDragEnter) {\n          onDragEnter(event);\n        }\n      });\n    }\n  }, [dragTargets, getFilesFromEvent, onDragEnter, noDragEventsBubbling]);\n  var onDragOverCb = useCallback(function (event) {\n    event.preventDefault();\n    event.persist();\n    stopPropagation(event);\n\n    if (event.dataTransfer) {\n      try {\n        event.dataTransfer.dropEffect = 'copy';\n      } catch (_unused) {}\n      /* eslint-disable-line no-empty */\n\n    }\n\n    if (isEvtWithFiles(event) && onDragOver) {\n      onDragOver(event);\n    }\n\n    return false;\n  }, [onDragOver, noDragEventsBubbling]);\n  var onDragLeaveCb = useCallback(function (event) {\n    event.preventDefault();\n    event.persist();\n    stopPropagation(event); // Only deactivate once the dropzone and all children have been left\n\n    var targets = _toConsumableArray(dragTargets.filter(function (target) {\n      return target !== event.target && rootRef.current && rootRef.current.contains(target);\n    }));\n\n    setDragTargets(targets);\n\n    if (targets.length > 0) {\n      return;\n    }\n\n    dispatch({\n      isDragActive: false,\n      type: 'setDraggedFiles',\n      draggedFiles: []\n    });\n\n    if (isEvtWithFiles(event) && onDragLeave) {\n      onDragLeave(event);\n    }\n  }, [rootRef, dragTargets, onDragLeave, noDragEventsBubbling]);\n  var onDropCb = useCallback(function (event) {\n    event.preventDefault(); // Persist here because we need the event later after getFilesFromEvent() is done\n\n    event.persist();\n    stopPropagation(event);\n    setDragTargets([]);\n    dispatch({\n      type: 'reset'\n    });\n\n    if (isEvtWithFiles(event)) {\n      Promise.resolve(getFilesFromEvent(event)).then(function (files) {\n        if (isPropagationStopped(event) && !noDragEventsBubbling) {\n          return;\n        }\n\n        var acceptedFiles = [];\n        var rejectedFiles = [];\n        files.forEach(function (file) {\n          if (fileAccepted(file, accept) && fileMatchSize(file, maxSize, minSize)) {\n            acceptedFiles.push(file);\n          } else {\n            rejectedFiles.push(file);\n          }\n        });\n\n        if (!multiple && acceptedFiles.length > 1) {\n          rejectedFiles.push.apply(rejectedFiles, _toConsumableArray(acceptedFiles.splice(0))); // Reject everything and empty accepted files\n        }\n\n        dispatch({\n          acceptedFiles: acceptedFiles,\n          rejectedFiles: rejectedFiles,\n          type: 'setFiles'\n        });\n\n        if (onDrop) {\n          onDrop(acceptedFiles, rejectedFiles, event);\n        }\n\n        if (rejectedFiles.length > 0 && onDropRejected) {\n          onDropRejected(rejectedFiles, event);\n        }\n\n        if (acceptedFiles.length > 0 && onDropAccepted) {\n          onDropAccepted(acceptedFiles, event);\n        }\n      });\n    }\n  }, [multiple, accept, minSize, maxSize, getFilesFromEvent, onDrop, onDropAccepted, onDropRejected, noDragEventsBubbling]);\n\n  var composeHandler = function composeHandler(fn) {\n    return disabled ? null : fn;\n  };\n\n  var composeKeyboardHandler = function composeKeyboardHandler(fn) {\n    return noKeyboard ? null : composeHandler(fn);\n  };\n\n  var composeDragHandler = function composeDragHandler(fn) {\n    return noDrag ? null : composeHandler(fn);\n  };\n\n  var stopPropagation = function stopPropagation(event) {\n    if (noDragEventsBubbling) {\n      event.stopPropagation();\n    }\n  };\n\n  var getRootProps = useMemo(function () {\n    return function () {\n      var _ref3 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n          _ref3$refKey = _ref3.refKey,\n          refKey = _ref3$refKey === void 0 ? 'ref' : _ref3$refKey,\n          onKeyDown = _ref3.onKeyDown,\n          onFocus = _ref3.onFocus,\n          onBlur = _ref3.onBlur,\n          onClick = _ref3.onClick,\n          onDragEnter = _ref3.onDragEnter,\n          onDragOver = _ref3.onDragOver,\n          onDragLeave = _ref3.onDragLeave,\n          onDrop = _ref3.onDrop,\n          rest = _objectWithoutProperties(_ref3, [\"refKey\", \"onKeyDown\", \"onFocus\", \"onBlur\", \"onClick\", \"onDragEnter\", \"onDragOver\", \"onDragLeave\", \"onDrop\"]);\n\n      return _objectSpread(_defineProperty({\n        onKeyDown: composeKeyboardHandler(composeEventHandlers(onKeyDown, onKeyDownCb)),\n        onFocus: composeKeyboardHandler(composeEventHandlers(onFocus, onFocusCb)),\n        onBlur: composeKeyboardHandler(composeEventHandlers(onBlur, onBlurCb)),\n        onClick: composeHandler(composeEventHandlers(onClick, onClickCb)),\n        onDragEnter: composeDragHandler(composeEventHandlers(onDragEnter, onDragEnterCb)),\n        onDragOver: composeDragHandler(composeEventHandlers(onDragOver, onDragOverCb)),\n        onDragLeave: composeDragHandler(composeEventHandlers(onDragLeave, onDragLeaveCb)),\n        onDrop: composeDragHandler(composeEventHandlers(onDrop, onDropCb))\n      }, refKey, rootRef), rootRef.current && rootRef.current.tagName === 'LABEL' ? {\n        htmlFor: 'noop'\n      } : {}, !disabled && !noKeyboard ? {\n        tabIndex: 0\n      } : {}, rest);\n    };\n  }, [rootRef, onKeyDownCb, onFocusCb, onBlurCb, onClickCb, onDragEnterCb, onDragOverCb, onDragLeaveCb, onDropCb, noKeyboard, noDrag, disabled]);\n  var onInputElementClick = useCallback(function (event) {\n    event.stopPropagation();\n  }, []);\n  var getInputProps = useMemo(function () {\n    return function () {\n      var _ref4 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n          _ref4$refKey = _ref4.refKey,\n          refKey = _ref4$refKey === void 0 ? 'ref' : _ref4$refKey,\n          onChange = _ref4.onChange,\n          onClick = _ref4.onClick,\n          disabled = _ref4.disabled,\n          rest = _objectWithoutProperties(_ref4, [\"refKey\", \"onChange\", \"onClick\", \"disabled\"]);\n\n      var inputProps = _defineProperty({\n        accept: accept,\n        multiple: multiple,\n        type: 'file',\n        style: {\n          display: 'none'\n        },\n        onChange: composeHandler(composeEventHandlers(onChange, onDropCb)),\n        onClick: composeHandler(composeEventHandlers(onClick, onInputElementClick)),\n        autoComplete: 'off',\n        tabIndex: -1,\n        disabled: disabled !== undefined ? disabled : noClick\n      }, refKey, inputRef);\n\n      return _objectSpread({}, inputProps, rest);\n    };\n  }, [inputRef, accept, multiple, onDropCb, disabled, noClick]);\n  var fileCount = draggedFiles.length;\n  var isMultipleAllowed = multiple || fileCount <= 1;\n  var isDragAccept = fileCount > 0 && allFilesAccepted(draggedFiles, accept);\n  var isDragReject = fileCount > 0 && (!isDragAccept || !isMultipleAllowed);\n  return _objectSpread({}, state, {\n    isDragAccept: isDragAccept,\n    isDragReject: isDragReject,\n    isFocused: isFocused && !disabled,\n    getRootProps: getRootProps,\n    getInputProps: getInputProps,\n    rootRef: rootRef,\n    inputRef: inputRef,\n    open: composeHandler(openFileDialog)\n  });\n}\n\nfunction reducer(state, action) {\n  /* istanbul ignore next */\n  switch (action.type) {\n    case 'focus':\n      return _objectSpread({}, state, {\n        isFocused: true\n      });\n\n    case 'blur':\n      return _objectSpread({}, state, {\n        isFocused: false\n      });\n\n    case 'openDialog':\n      return _objectSpread({}, state, {\n        isFileDialogActive: true\n      });\n\n    case 'closeDialog':\n      return _objectSpread({}, state, {\n        isFileDialogActive: false\n      });\n\n    case 'setDraggedFiles':\n      /* eslint no-case-declarations: 0 */\n      var isDragActive = action.isDragActive,\n          draggedFiles = action.draggedFiles;\n      return _objectSpread({}, state, {\n        draggedFiles: draggedFiles,\n        isDragActive: isDragActive\n      });\n\n    case 'setFiles':\n      return _objectSpread({}, state, {\n        acceptedFiles: action.acceptedFiles,\n        rejectedFiles: action.rejectedFiles\n      });\n\n    case 'reset':\n      return _objectSpread({}, state, {\n        isFileDialogActive: false,\n        isDragActive: false,\n        draggedFiles: []\n      });\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["D:/Development/VSCode/Reactivities/client-app/node_modules/react-dropzone/dist/es/index.js"],"names":["_toConsumableArray","arr","_arrayWithoutHoles","_iterableToArray","_nonIterableSpread","TypeError","iter","Symbol","iterator","Object","prototype","toString","call","Array","from","isArray","i","arr2","length","_slicedToArray","_arrayWithHoles","_iterableToArrayLimit","_nonIterableRest","_arr","_n","_d","_e","undefined","_i","_s","next","done","push","value","err","_objectSpread","target","arguments","source","ownKeys","keys","getOwnPropertySymbols","concat","filter","sym","getOwnPropertyDescriptor","enumerable","forEach","key","_defineProperty","obj","defineProperty","configurable","writable","_typeof","constructor","_objectWithoutProperties","excluded","_objectWithoutPropertiesLoose","sourceSymbolKeys","indexOf","propertyIsEnumerable","sourceKeys","React","forwardRef","Fragment","useCallback","useEffect","useMemo","useReducer","useRef","useState","PropTypes","fromEvent","allFilesAccepted","composeEventHandlers","fileAccepted","fileMatchSize","isEvtWithFiles","isIeOrEdge","isPropagationStopped","onDocumentDragOver","Dropzone","_ref","ref","children","params","_useDropzone","useDropzone","open","props","current","createElement","displayName","propTypes","func","accept","oneOfType","string","arrayOf","multiple","bool","preventDropOnDocument","noClick","noKeyboard","noDrag","noDragEventsBubbling","minSize","number","maxSize","disabled","getFilesFromEvent","onFileDialogCancel","onDragEnter","onDragLeave","onDragOver","onDrop","onDropAccepted","onDropRejected","initialState","isFocused","isFileDialogActive","isDragActive","isDragAccept","isDragReject","draggedFiles","acceptedFiles","rejectedFiles","_ref2","_ref2$disabled","_ref2$getFilesFromEve","_ref2$maxSize","Infinity","_ref2$minSize","_ref2$multiple","_ref2$preventDropOnDo","_ref2$noClick","_ref2$noKeyboard","_ref2$noDrag","_ref2$noDragEventsBub","rootRef","inputRef","_useReducer","reducer","_useReducer2","state","dispatch","openFileDialog","type","click","onWindowFocus","setTimeout","files","window","addEventListener","removeEventListener","onKeyDownCb","event","isEqualNode","keyCode","preventDefault","onFocusCb","onBlurCb","onClickCb","_useState","_useState2","dragTargets","setDragTargets","onDocumentDrop","contains","document","onDragEnterCb","persist","stopPropagation","Promise","resolve","then","onDragOverCb","dataTransfer","dropEffect","_unused","onDragLeaveCb","targets","onDropCb","file","apply","splice","composeHandler","fn","composeKeyboardHandler","composeDragHandler","getRootProps","_ref3","_ref3$refKey","refKey","onKeyDown","onFocus","onBlur","onClick","rest","tagName","htmlFor","tabIndex","onInputElementClick","getInputProps","_ref4","_ref4$refKey","onChange","inputProps","style","display","autoComplete","fileCount","isMultipleAllowed","action"],"mappings":"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","sourcesContent":["function _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance\"); }\n\nfunction _iterableToArray(iter) { if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } }\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); }\n\nfunction _iterableToArrayLimit(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; var ownKeys = Object.keys(source); if (typeof Object.getOwnPropertySymbols === 'function') { ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; })); } ownKeys.forEach(function (key) { _defineProperty(target, key, source[key]); }); } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* eslint prefer-template: 0 */\nimport React, { forwardRef, Fragment, useCallback, useEffect, useMemo, useReducer, useRef, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { fromEvent } from 'file-selector';\nimport { allFilesAccepted, composeEventHandlers, fileAccepted, fileMatchSize, isEvtWithFiles, isIeOrEdge, isPropagationStopped, onDocumentDragOver } from './utils/index';\n/**\n * Convenience wrapper component for the `useDropzone` hook\n *\n * ```jsx\n * <Dropzone>\n *   {({getRootProps, getInputProps}) => (\n *     <div {...getRootProps()}>\n *       <input {...getInputProps()} />\n *       <p>Drag 'n' drop some files here, or click to select files</p>\n *     </div>\n *   )}\n * </Dropzone>\n * ```\n */\n\nvar Dropzone = forwardRef(function (_ref, ref) {\n  var children = _ref.children,\n      params = _objectWithoutProperties(_ref, [\"children\"]);\n\n  var _useDropzone = useDropzone(params),\n      open = _useDropzone.open,\n      props = _objectWithoutProperties(_useDropzone, [\"open\"]);\n\n  useEffect(function () {\n    if (typeof ref === 'function') {\n      ref({\n        open: open\n      });\n    } else if (_typeof(ref) === 'object' && ref !== null) {\n      ref.current = {\n        open: open\n      };\n    }\n\n    return function () {\n      if (typeof ref === 'function') {\n        ref(null);\n      } else if (_typeof(ref) === 'object' && ref !== null) {\n        ref.current = null;\n      }\n    };\n  }, [ref]); // TODO: Figure out why react-styleguidist cannot create docs if we don't return a jsx element\n\n  return React.createElement(Fragment, null, children(_objectSpread({}, props, {\n    open: open\n  })));\n});\nDropzone.displayName = 'Dropzone';\nDropzone.propTypes = {\n  /**\n   * Render function that exposes the dropzone state and prop getter fns\n   *\n   * @param {object} params\n   * @param {Function} params.getRootProps Returns the props you should apply to the root drop container you render\n   * @param {Function} params.getInputProps Returns the props you should apply to hidden file input you render\n   * @param {Function} params.open Open the native file selection dialog\n   * @param {boolean} params.isFocused Dropzone area is in focus\n   * @param {boolean} params.isFileDialogActive File dialog is opened\n   * @param {boolean} params.isDragActive Active drag is in progress\n   * @param {boolean} params.isDragAccept Dragged files are accepted\n   * @param {boolean} params.isDragReject Some dragged files are rejected\n   * @param {File[]} params.draggedFiles Files in active drag\n   * @param {File[]} params.acceptedFiles Accepted files\n   * @param {File[]} params.rejectedFiles Rejected files\n   */\n  children: PropTypes.func,\n\n  /**\n   * Set accepted file types.\n   * See https://github.com/okonet/attr-accept for more information.\n   * Keep in mind that mime type determination is not reliable across platforms. CSV files,\n   * for example, are reported as text/plain under macOS but as application/vnd.ms-excel under\n   * Windows. In some cases there might not be a mime type set at all.\n   * See: https://github.com/react-dropzone/react-dropzone/issues/276\n   */\n  accept: PropTypes.oneOfType([PropTypes.string, PropTypes.arrayOf(PropTypes.string)]),\n\n  /**\n   * Allow drag 'n' drop (or selection from the file dialog) of multiple files\n   */\n  multiple: PropTypes.bool,\n\n  /**\n   * If false, allow dropped items to take over the current browser window\n   */\n  preventDropOnDocument: PropTypes.bool,\n\n  /**\n   * If true, disables click to open the native file selection dialog\n   */\n  noClick: PropTypes.bool,\n\n  /**\n   * If true, disables SPACE/ENTER to open the native file selection dialog.\n   * Note that it also stops tracking the focus state.\n   */\n  noKeyboard: PropTypes.bool,\n\n  /**\n   * If true, disables drag 'n' drop\n   */\n  noDrag: PropTypes.bool,\n\n  /**\n   * If true, stops drag event propagation to parents\n   */\n  noDragEventsBubbling: PropTypes.bool,\n\n  /**\n   * Minimum file size (in bytes)\n   */\n  minSize: PropTypes.number,\n\n  /**\n   * Maximum file size (in bytes)\n   */\n  maxSize: PropTypes.number,\n\n  /**\n   * Enable/disable the dropzone\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * Use this to provide a custom file aggregator\n   *\n   * @param {(DragEvent|Event)} event A drag event or input change event (if files were selected via the file dialog)\n   */\n  getFilesFromEvent: PropTypes.func,\n\n  /**\n   * Cb for when closing the file dialog with no selection\n   */\n  onFileDialogCancel: PropTypes.func,\n\n  /**\n   * Cb for when the `dragenter` event occurs.\n   *\n   * @param {DragEvent} event\n   */\n  onDragEnter: PropTypes.func,\n\n  /**\n   * Cb for when the `dragleave` event occurs\n   *\n   * @param {DragEvent} event\n   */\n  onDragLeave: PropTypes.func,\n\n  /**\n   * Cb for when the `dragover` event occurs\n   *\n   * @param {DragEvent} event\n   */\n  onDragOver: PropTypes.func,\n\n  /**\n   * Cb for when the `drop` event occurs.\n   * Note that this callback is invoked after the `getFilesFromEvent` callback is done.\n   *\n   * Files are accepted or rejected based on the `accept`, `multiple`, `minSize` and `maxSize` props.\n   * `accept` must be a valid [MIME type](http://www.iana.org/assignments/media-types/media-types.xhtml) according to [input element specification](https://www.w3.org/wiki/HTML/Elements/input/file) or a valid file extension.\n   * If `multiple` is set to false and additional files are droppped,\n   * all files besides the first will be rejected.\n   * Any file which does not have a size in the [`minSize`, `maxSize`] range, will be rejected as well.\n   *\n   * Note that the `onDrop` callback will always be invoked regardless if the dropped files were accepted or rejected.\n   * If you'd like to react to a specific scenario, use the `onDropAccepted`/`onDropRejected` props.\n   *\n   * `onDrop` will provide you with an array of [File](https://developer.mozilla.org/en-US/docs/Web/API/File) objects which you can then process and send to a server.\n   * For example, with [SuperAgent](https://github.com/visionmedia/superagent) as a http/ajax library:\n   *\n   * ```js\n   * function onDrop(acceptedFiles) {\n   *   const req = request.post('/upload')\n   *   acceptedFiles.forEach(file => {\n   *     req.attach(file.name, file)\n   *   })\n   *   req.end(callback)\n   * }\n   * ```\n   *\n   * @param {File[]} acceptedFiles\n   * @param {File[]} rejectedFiles\n   * @param {(DragEvent|Event)} event A drag event or input change event (if files were selected via the file dialog)\n   */\n  onDrop: PropTypes.func,\n\n  /**\n   * Cb for when the `drop` event occurs.\n   * Note that if no files are accepted, this callback is not invoked.\n   *\n   * @param {File[]} files\n   * @param {(DragEvent|Event)} event\n   */\n  onDropAccepted: PropTypes.func,\n\n  /**\n   * Cb for when the `drop` event occurs.\n   * Note that if no files are rejected, this callback is not invoked.\n   *\n   * @param {object[]} files\n   * @param {(DragEvent|Event)} event\n   */\n  onDropRejected: PropTypes.func\n};\nexport default Dropzone;\n/**\n * A function that is invoked for the `dragenter`,\n * `dragover` and `dragleave` events.\n * It is not invoked if the items are not files (such as link, text, etc.).\n *\n * @callback dragCb\n * @param {DragEvent} event\n */\n\n/**\n * A function that is invoked for the `drop` or input change event.\n * It is not invoked if the items are not files (such as link, text, etc.).\n *\n * @callback dropCb\n * @param {File[]} acceptedFiles List of accepted files\n * @param {File[]} rejectedFiles List of rejected files\n * @param {(DragEvent|Event)} event A drag event or input change event (if files were selected via the file dialog)\n */\n\n/**\n * A function that is invoked for the `drop` or input change event.\n * It is not invoked if the items are files (such as link, text, etc.).\n *\n * @callback dropAcceptedCb\n * @param {File[]} files List of accepted files that meet the given criteria\n * (`accept`, `multiple`, `minSize`, `maxSize`)\n * @param {(DragEvent|Event)} event A drag event or input change event (if files were selected via the file dialog)\n */\n\n/**\n * A function that is invoked for the `drop` or input change event.\n *\n * @callback dropRejectedCb\n * @param {File[]} files List of rejected files that do not meet the given criteria\n * (`accept`, `multiple`, `minSize`, `maxSize`)\n * @param {(DragEvent|Event)} event A drag event or input change event (if files were selected via the file dialog)\n */\n\n/**\n * A function that is used aggregate files,\n * in a asynchronous fashion, from drag or input change events.\n *\n * @callback getFilesFromEvent\n * @param {(DragEvent|Event)} event A drag event or input change event (if files were selected via the file dialog)\n * @returns {(File[]|Promise<File[]>)}\n */\n\n/**\n * An object with the current dropzone state and some helper functions.\n *\n * @typedef {object} DropzoneState\n * @property {Function} getRootProps Returns the props you should apply to the root drop container you render\n * @property {Function} getInputProps Returns the props you should apply to hidden file input you render\n * @property {Function} open Open the native file selection dialog\n * @property {boolean} isFocused Dropzone area is in focus\n * @property {boolean} isFileDialogActive File dialog is opened\n * @property {boolean} isDragActive Active drag is in progress\n * @property {boolean} isDragAccept Dragged files are accepted\n * @property {boolean} isDragReject Some dragged files are rejected\n * @property {File[]} draggedFiles Files in active drag\n * @property {File[]} acceptedFiles Accepted files\n * @property {File[]} rejectedFiles Rejected files\n */\n\nvar initialState = {\n  isFocused: false,\n  isFileDialogActive: false,\n  isDragActive: false,\n  isDragAccept: false,\n  isDragReject: false,\n  draggedFiles: [],\n  acceptedFiles: [],\n  rejectedFiles: []\n  /**\n   * A React hook that creates a drag 'n' drop area.\n   *\n   * ```jsx\n   * function MyDropzone(props) {\n   *   const {getRootProps, getInputProps} = useDropzone({\n   *     onDrop: acceptedFiles => {\n   *       // do something with the File objects, e.g. upload to some server\n   *     }\n   *   });\n   *   return (\n   *     <div {...getRootProps()}>\n   *       <input {...getInputProps()} />\n   *       <p>Drag and drop some files here, or click to select files</p>\n   *     </div>\n   *   )\n   * }\n   * ```\n   *\n   * @function useDropzone\n   *\n   * @param {object} props\n   * @param {string|string[]} [props.accept] Set accepted file types.\n   * See https://github.com/okonet/attr-accept for more information.\n   * Keep in mind that mime type determination is not reliable across platforms. CSV files,\n   * for example, are reported as text/plain under macOS but as application/vnd.ms-excel under\n   * Windows. In some cases there might not be a mime type set at all.\n   * See: https://github.com/react-dropzone/react-dropzone/issues/276\n   * @param {boolean} [props.multiple=true] Allow drag 'n' drop (or selection from the file dialog) of multiple files\n   * @param {boolean} [props.preventDropOnDocument=true] If false, allow dropped items to take over the current browser window\n   * @param {boolean} [props.noClick=false] If true, disables click to open the native file selection dialog\n   * @param {boolean} [props.noKeyboard=false] If true, disables SPACE/ENTER to open the native file selection dialog.\n   * Note that it also stops tracking the focus state.\n   * @param {boolean} [props.noDrag=false] If true, disables drag 'n' drop\n   * @param {boolean} [props.noDragEventsBubbling=false] If true, stops drag event propagation to parents\n   * @param {number} [props.minSize=0] Minimum file size (in bytes)\n   * @param {number} [props.maxSize=Infinity] Maximum file size (in bytes)\n   * @param {boolean} [props.disabled=false] Enable/disable the dropzone\n   * @param {getFilesFromEvent} [props.getFilesFromEvent] Use this to provide a custom file aggregator\n   * @param {Function} [props.onFileDialogCancel] Cb for when closing the file dialog with no selection\n   * @param {dragCb} [props.onDragEnter] Cb for when the `dragenter` event occurs.\n   * @param {dragCb} [props.onDragLeave] Cb for when the `dragleave` event occurs\n   * @param {dragCb} [props.onDragOver] Cb for when the `dragover` event occurs\n   * @param {dropCb} [props.onDrop] Cb for when the `drop` event occurs.\n   * Note that this callback is invoked after the `getFilesFromEvent` callback is done.\n   *\n   * Files are accepted or rejected based on the `accept`, `multiple`, `minSize` and `maxSize` props.\n   * `accept` must be a valid [MIME type](http://www.iana.org/assignments/media-types/media-types.xhtml) according to [input element specification](https://www.w3.org/wiki/HTML/Elements/input/file) or a valid file extension.\n   * If `multiple` is set to false and additional files are droppped,\n   * all files besides the first will be rejected.\n   * Any file which does not have a size in the [`minSize`, `maxSize`] range, will be rejected as well.\n   *\n   * Note that the `onDrop` callback will always be invoked regardless if the dropped files were accepted or rejected.\n   * If you'd like to react to a specific scenario, use the `onDropAccepted`/`onDropRejected` props.\n   *\n   * `onDrop` will provide you with an array of [File](https://developer.mozilla.org/en-US/docs/Web/API/File) objects which you can then process and send to a server.\n   * For example, with [SuperAgent](https://github.com/visionmedia/superagent) as a http/ajax library:\n   *\n   * ```js\n   * function onDrop(acceptedFiles) {\n   *   const req = request.post('/upload')\n   *   acceptedFiles.forEach(file => {\n   *     req.attach(file.name, file)\n   *   })\n   *   req.end(callback)\n   * }\n   * ```\n   * @param {dropAcceptedCb} [props.onDropAccepted]\n   * @param {dropRejectedCb} [props.onDropRejected]\n   *\n   * @returns {DropzoneState}\n   */\n\n};\nexport function useDropzone() {\n  var _ref2 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n      accept = _ref2.accept,\n      _ref2$disabled = _ref2.disabled,\n      disabled = _ref2$disabled === void 0 ? false : _ref2$disabled,\n      _ref2$getFilesFromEve = _ref2.getFilesFromEvent,\n      getFilesFromEvent = _ref2$getFilesFromEve === void 0 ? fromEvent : _ref2$getFilesFromEve,\n      _ref2$maxSize = _ref2.maxSize,\n      maxSize = _ref2$maxSize === void 0 ? Infinity : _ref2$maxSize,\n      _ref2$minSize = _ref2.minSize,\n      minSize = _ref2$minSize === void 0 ? 0 : _ref2$minSize,\n      _ref2$multiple = _ref2.multiple,\n      multiple = _ref2$multiple === void 0 ? true : _ref2$multiple,\n      onDragEnter = _ref2.onDragEnter,\n      onDragLeave = _ref2.onDragLeave,\n      onDragOver = _ref2.onDragOver,\n      onDrop = _ref2.onDrop,\n      onDropAccepted = _ref2.onDropAccepted,\n      onDropRejected = _ref2.onDropRejected,\n      onFileDialogCancel = _ref2.onFileDialogCancel,\n      _ref2$preventDropOnDo = _ref2.preventDropOnDocument,\n      preventDropOnDocument = _ref2$preventDropOnDo === void 0 ? true : _ref2$preventDropOnDo,\n      _ref2$noClick = _ref2.noClick,\n      noClick = _ref2$noClick === void 0 ? false : _ref2$noClick,\n      _ref2$noKeyboard = _ref2.noKeyboard,\n      noKeyboard = _ref2$noKeyboard === void 0 ? false : _ref2$noKeyboard,\n      _ref2$noDrag = _ref2.noDrag,\n      noDrag = _ref2$noDrag === void 0 ? false : _ref2$noDrag,\n      _ref2$noDragEventsBub = _ref2.noDragEventsBubbling,\n      noDragEventsBubbling = _ref2$noDragEventsBub === void 0 ? false : _ref2$noDragEventsBub;\n\n  var rootRef = useRef(null);\n  var inputRef = useRef(null);\n\n  var _useReducer = useReducer(reducer, initialState),\n      _useReducer2 = _slicedToArray(_useReducer, 2),\n      state = _useReducer2[0],\n      dispatch = _useReducer2[1];\n\n  var isFocused = state.isFocused,\n      isFileDialogActive = state.isFileDialogActive,\n      draggedFiles = state.draggedFiles; // Fn for opening the file dialog programmatically\n\n  var openFileDialog = function openFileDialog() {\n    if (inputRef.current) {\n      dispatch({\n        type: 'openDialog'\n      });\n      inputRef.current.value = null;\n      inputRef.current.click();\n    }\n  }; // Update file dialog active state when the window is focused on\n\n\n  var onWindowFocus = function onWindowFocus() {\n    // Execute the timeout only if the file dialog is opened in the browser\n    if (isFileDialogActive) {\n      setTimeout(function () {\n        if (inputRef.current) {\n          var files = inputRef.current.files;\n\n          if (!files.length) {\n            dispatch({\n              type: 'closeDialog'\n            });\n\n            if (typeof onFileDialogCancel === 'function') {\n              onFileDialogCancel();\n            }\n          }\n        }\n      }, 300);\n    }\n  };\n\n  useEffect(function () {\n    window.addEventListener('focus', onWindowFocus, false);\n    return function () {\n      window.removeEventListener('focus', onWindowFocus, false);\n    };\n  }, [inputRef, isFileDialogActive, onFileDialogCancel]); // Cb to open the file dialog when SPACE/ENTER occurs on the dropzone\n\n  var onKeyDownCb = useCallback(function (event) {\n    // Ignore keyboard events bubbling up the DOM tree\n    if (!rootRef.current || !rootRef.current.isEqualNode(event.target)) {\n      return;\n    }\n\n    if (event.keyCode === 32 || event.keyCode === 13) {\n      event.preventDefault();\n      openFileDialog();\n    }\n  }, [rootRef, inputRef]); // Update focus state for the dropzone\n\n  var onFocusCb = useCallback(function () {\n    dispatch({\n      type: 'focus'\n    });\n  }, []);\n  var onBlurCb = useCallback(function () {\n    dispatch({\n      type: 'blur'\n    });\n  }, []); // Cb to open the file dialog when click occurs on the dropzone\n\n  var onClickCb = useCallback(function () {\n    if (noClick) {\n      return;\n    } // In IE11/Edge the file-browser dialog is blocking, therefore, use setTimeout()\n    // to ensure React can handle state changes\n    // See: https://github.com/react-dropzone/react-dropzone/issues/450\n\n\n    if (isIeOrEdge()) {\n      setTimeout(openFileDialog, 0);\n    } else {\n      openFileDialog();\n    }\n  }, [inputRef, noClick]);\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      dragTargets = _useState2[0],\n      setDragTargets = _useState2[1];\n\n  var onDocumentDrop = function onDocumentDrop(event) {\n    if (rootRef.current && rootRef.current.contains(event.target)) {\n      // If we intercepted an event for our instance, let it propagate down to the instance's onDrop handler\n      return;\n    }\n\n    event.preventDefault();\n    setDragTargets([]);\n  };\n\n  useEffect(function () {\n    if (preventDropOnDocument) {\n      document.addEventListener('dragover', onDocumentDragOver, false);\n      document.addEventListener('drop', onDocumentDrop, false);\n    }\n\n    return function () {\n      if (preventDropOnDocument) {\n        document.removeEventListener('dragover', onDocumentDragOver);\n        document.removeEventListener('drop', onDocumentDrop);\n      }\n    };\n  }, [rootRef, preventDropOnDocument]);\n  var onDragEnterCb = useCallback(function (event) {\n    event.preventDefault(); // Persist here because we need the event later after getFilesFromEvent() is done\n\n    event.persist();\n    stopPropagation(event); // Count the dropzone and any children that are entered.\n\n    if (dragTargets.indexOf(event.target) === -1) {\n      setDragTargets([].concat(_toConsumableArray(dragTargets), [event.target]));\n    }\n\n    if (isEvtWithFiles(event)) {\n      Promise.resolve(getFilesFromEvent(event)).then(function (draggedFiles) {\n        if (isPropagationStopped(event) && !noDragEventsBubbling) {\n          return;\n        }\n\n        dispatch({\n          draggedFiles: draggedFiles,\n          isDragActive: true,\n          type: 'setDraggedFiles'\n        });\n\n        if (onDragEnter) {\n          onDragEnter(event);\n        }\n      });\n    }\n  }, [dragTargets, getFilesFromEvent, onDragEnter, noDragEventsBubbling]);\n  var onDragOverCb = useCallback(function (event) {\n    event.preventDefault();\n    event.persist();\n    stopPropagation(event);\n\n    if (event.dataTransfer) {\n      try {\n        event.dataTransfer.dropEffect = 'copy';\n      } catch (_unused) {}\n      /* eslint-disable-line no-empty */\n\n    }\n\n    if (isEvtWithFiles(event) && onDragOver) {\n      onDragOver(event);\n    }\n\n    return false;\n  }, [onDragOver, noDragEventsBubbling]);\n  var onDragLeaveCb = useCallback(function (event) {\n    event.preventDefault();\n    event.persist();\n    stopPropagation(event); // Only deactivate once the dropzone and all children have been left\n\n    var targets = _toConsumableArray(dragTargets.filter(function (target) {\n      return target !== event.target && rootRef.current && rootRef.current.contains(target);\n    }));\n\n    setDragTargets(targets);\n\n    if (targets.length > 0) {\n      return;\n    }\n\n    dispatch({\n      isDragActive: false,\n      type: 'setDraggedFiles',\n      draggedFiles: []\n    });\n\n    if (isEvtWithFiles(event) && onDragLeave) {\n      onDragLeave(event);\n    }\n  }, [rootRef, dragTargets, onDragLeave, noDragEventsBubbling]);\n  var onDropCb = useCallback(function (event) {\n    event.preventDefault(); // Persist here because we need the event later after getFilesFromEvent() is done\n\n    event.persist();\n    stopPropagation(event);\n    setDragTargets([]);\n    dispatch({\n      type: 'reset'\n    });\n\n    if (isEvtWithFiles(event)) {\n      Promise.resolve(getFilesFromEvent(event)).then(function (files) {\n        if (isPropagationStopped(event) && !noDragEventsBubbling) {\n          return;\n        }\n\n        var acceptedFiles = [];\n        var rejectedFiles = [];\n        files.forEach(function (file) {\n          if (fileAccepted(file, accept) && fileMatchSize(file, maxSize, minSize)) {\n            acceptedFiles.push(file);\n          } else {\n            rejectedFiles.push(file);\n          }\n        });\n\n        if (!multiple && acceptedFiles.length > 1) {\n          rejectedFiles.push.apply(rejectedFiles, _toConsumableArray(acceptedFiles.splice(0))); // Reject everything and empty accepted files\n        }\n\n        dispatch({\n          acceptedFiles: acceptedFiles,\n          rejectedFiles: rejectedFiles,\n          type: 'setFiles'\n        });\n\n        if (onDrop) {\n          onDrop(acceptedFiles, rejectedFiles, event);\n        }\n\n        if (rejectedFiles.length > 0 && onDropRejected) {\n          onDropRejected(rejectedFiles, event);\n        }\n\n        if (acceptedFiles.length > 0 && onDropAccepted) {\n          onDropAccepted(acceptedFiles, event);\n        }\n      });\n    }\n  }, [multiple, accept, minSize, maxSize, getFilesFromEvent, onDrop, onDropAccepted, onDropRejected, noDragEventsBubbling]);\n\n  var composeHandler = function composeHandler(fn) {\n    return disabled ? null : fn;\n  };\n\n  var composeKeyboardHandler = function composeKeyboardHandler(fn) {\n    return noKeyboard ? null : composeHandler(fn);\n  };\n\n  var composeDragHandler = function composeDragHandler(fn) {\n    return noDrag ? null : composeHandler(fn);\n  };\n\n  var stopPropagation = function stopPropagation(event) {\n    if (noDragEventsBubbling) {\n      event.stopPropagation();\n    }\n  };\n\n  var getRootProps = useMemo(function () {\n    return function () {\n      var _ref3 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n          _ref3$refKey = _ref3.refKey,\n          refKey = _ref3$refKey === void 0 ? 'ref' : _ref3$refKey,\n          onKeyDown = _ref3.onKeyDown,\n          onFocus = _ref3.onFocus,\n          onBlur = _ref3.onBlur,\n          onClick = _ref3.onClick,\n          onDragEnter = _ref3.onDragEnter,\n          onDragOver = _ref3.onDragOver,\n          onDragLeave = _ref3.onDragLeave,\n          onDrop = _ref3.onDrop,\n          rest = _objectWithoutProperties(_ref3, [\"refKey\", \"onKeyDown\", \"onFocus\", \"onBlur\", \"onClick\", \"onDragEnter\", \"onDragOver\", \"onDragLeave\", \"onDrop\"]);\n\n      return _objectSpread(_defineProperty({\n        onKeyDown: composeKeyboardHandler(composeEventHandlers(onKeyDown, onKeyDownCb)),\n        onFocus: composeKeyboardHandler(composeEventHandlers(onFocus, onFocusCb)),\n        onBlur: composeKeyboardHandler(composeEventHandlers(onBlur, onBlurCb)),\n        onClick: composeHandler(composeEventHandlers(onClick, onClickCb)),\n        onDragEnter: composeDragHandler(composeEventHandlers(onDragEnter, onDragEnterCb)),\n        onDragOver: composeDragHandler(composeEventHandlers(onDragOver, onDragOverCb)),\n        onDragLeave: composeDragHandler(composeEventHandlers(onDragLeave, onDragLeaveCb)),\n        onDrop: composeDragHandler(composeEventHandlers(onDrop, onDropCb))\n      }, refKey, rootRef), rootRef.current && rootRef.current.tagName === 'LABEL' ? {\n        htmlFor: 'noop'\n      } : {}, !disabled && !noKeyboard ? {\n        tabIndex: 0\n      } : {}, rest);\n    };\n  }, [rootRef, onKeyDownCb, onFocusCb, onBlurCb, onClickCb, onDragEnterCb, onDragOverCb, onDragLeaveCb, onDropCb, noKeyboard, noDrag, disabled]);\n  var onInputElementClick = useCallback(function (event) {\n    event.stopPropagation();\n  }, []);\n  var getInputProps = useMemo(function () {\n    return function () {\n      var _ref4 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n          _ref4$refKey = _ref4.refKey,\n          refKey = _ref4$refKey === void 0 ? 'ref' : _ref4$refKey,\n          onChange = _ref4.onChange,\n          onClick = _ref4.onClick,\n          disabled = _ref4.disabled,\n          rest = _objectWithoutProperties(_ref4, [\"refKey\", \"onChange\", \"onClick\", \"disabled\"]);\n\n      var inputProps = _defineProperty({\n        accept: accept,\n        multiple: multiple,\n        type: 'file',\n        style: {\n          display: 'none'\n        },\n        onChange: composeHandler(composeEventHandlers(onChange, onDropCb)),\n        onClick: composeHandler(composeEventHandlers(onClick, onInputElementClick)),\n        autoComplete: 'off',\n        tabIndex: -1,\n        disabled: disabled !== undefined ? disabled : noClick\n      }, refKey, inputRef);\n\n      return _objectSpread({}, inputProps, rest);\n    };\n  }, [inputRef, accept, multiple, onDropCb, disabled, noClick]);\n  var fileCount = draggedFiles.length;\n  var isMultipleAllowed = multiple || fileCount <= 1;\n  var isDragAccept = fileCount > 0 && allFilesAccepted(draggedFiles, accept);\n  var isDragReject = fileCount > 0 && (!isDragAccept || !isMultipleAllowed);\n  return _objectSpread({}, state, {\n    isDragAccept: isDragAccept,\n    isDragReject: isDragReject,\n    isFocused: isFocused && !disabled,\n    getRootProps: getRootProps,\n    getInputProps: getInputProps,\n    rootRef: rootRef,\n    inputRef: inputRef,\n    open: composeHandler(openFileDialog)\n  });\n}\n\nfunction reducer(state, action) {\n  /* istanbul ignore next */\n  switch (action.type) {\n    case 'focus':\n      return _objectSpread({}, state, {\n        isFocused: true\n      });\n\n    case 'blur':\n      return _objectSpread({}, state, {\n        isFocused: false\n      });\n\n    case 'openDialog':\n      return _objectSpread({}, state, {\n        isFileDialogActive: true\n      });\n\n    case 'closeDialog':\n      return _objectSpread({}, state, {\n        isFileDialogActive: false\n      });\n\n    case 'setDraggedFiles':\n      /* eslint no-case-declarations: 0 */\n      var isDragActive = action.isDragActive,\n          draggedFiles = action.draggedFiles;\n      return _objectSpread({}, state, {\n        draggedFiles: draggedFiles,\n        isDragActive: isDragActive\n      });\n\n    case 'setFiles':\n      return _objectSpread({}, state, {\n        acceptedFiles: action.acceptedFiles,\n        rejectedFiles: action.rejectedFiles\n      });\n\n    case 'reset':\n      return _objectSpread({}, state, {\n        isFileDialogActive: false,\n        isDragActive: false,\n        draggedFiles: []\n      });\n\n    default:\n      return state;\n  }\n}"]},"metadata":{},"sourceType":"module"}