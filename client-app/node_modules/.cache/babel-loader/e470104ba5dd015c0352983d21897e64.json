{"ast":null,"code":"var _jsxFileName = \"D:\\\\Development\\\\VSCode\\\\Reactivities\\\\client-app\\\\src\\\\features\\\\profiles\\\\ProfileHeader.tsx\";\nimport React from 'react';\nimport { Segment, Item, Header, Button, Grid, Statistic, Divider, Reveal } from 'semantic-ui-react';\nimport { observer } from 'mobx-react-lite';\n\nconst ProfileHeader = ({\n  profile\n}) => {\n  return React.createElement(Segment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, React.createElement(Grid.Column, {\n    width: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, React.createElement(Item.Group, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, React.createElement(Item, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, React.createElement(Item.Image, {\n    avatar: true,\n    size: \"small\",\n    src: profile.image || '/assets/user.png',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }), React.createElement(Item.Content, {\n    verticalAlign: \"middle\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, React.createElement(Header, {\n    as: \"h1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, profile.displayName))))), React.createElement(Grid.Column, {\n    width: 4,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, React.createElement(Statistic.Group, {\n    widths: 2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, React.createElement(Statistic, {\n    label: \"Followers\",\n    value: \"5\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }), React.createElement(Statistic, {\n    label: \"Following\",\n    value: \"42\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  })), React.createElement(Divider, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }), React.createElement(Reveal, {\n    animated: \"move\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, React.createElement(Reveal.Content, {\n    visible: true,\n    style: {\n      width: '100%'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, React.createElement(Button, {\n    fluid: true,\n    color: \"teal\",\n    content: \"Following\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  })), React.createElement(Reveal.Content, {\n    hidden: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, React.createElement(Button, {\n    fluid: true,\n    basic: true,\n    color: true ? 'red' : 'green',\n    content: true ? 'Unfollow' : 'Follow',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }))))));\n};\n\nexport default observer(ProfileHeader);","map":{"version":3,"sources":["D:/Development/VSCode/Reactivities/client-app/src/features/profiles/ProfileHeader.tsx"],"names":["React","Segment","Item","Header","Button","Grid","Statistic","Divider","Reveal","observer","ProfileHeader","profile","image","displayName","width"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SACEC,OADF,EAEEC,IAFF,EAGEC,MAHF,EAIEC,MAJF,EAKEC,IALF,EAMEC,SANF,EAOEC,OAPF,EAQEC,MARF,QASO,mBATP;AAWA,SAASC,QAAT,QAAyB,iBAAzB;;AAMA,MAAMC,aAA+B,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAe;AACrD,SACE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD,CAAM,MAAN;AAAa,IAAA,KAAK,EAAE,EAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD,CAAM,KAAN;AAAY,IAAA,MAAM,MAAlB;AAAmB,IAAA,IAAI,EAAC,OAAxB;AAAgC,IAAA,GAAG,EAAEA,OAAO,CAACC,KAAR,IAAiB,kBAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,oBAAC,IAAD,CAAM,OAAN;AAAc,IAAA,aAAa,EAAC,QAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD;AAAQ,IAAA,EAAE,EAAC,IAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAiBD,OAAO,CAACE,WAAzB,CADF,CAFF,CADF,CADF,CADF,EAWE,oBAAC,IAAD,CAAM,MAAN;AAAa,IAAA,KAAK,EAAE,CAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,SAAD,CAAW,KAAX;AAAiB,IAAA,MAAM,EAAE,CAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,SAAD;AAAW,IAAA,KAAK,EAAC,WAAjB;AAA6B,IAAA,KAAK,EAAC,GAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,oBAAC,SAAD;AAAW,IAAA,KAAK,EAAC,WAAjB;AAA6B,IAAA,KAAK,EAAC,IAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF,EAKE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,EAME,oBAAC,MAAD;AAAQ,IAAA,QAAQ,EAAC,MAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD,CAAQ,OAAR;AAAgB,IAAA,OAAO,MAAvB;AAAwB,IAAA,KAAK,EAAE;AAAEC,MAAAA,KAAK,EAAE;AAAT,KAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD;AAAQ,IAAA,KAAK,MAAb;AAAc,IAAA,KAAK,EAAC,MAApB;AAA2B,IAAA,OAAO,EAAC,WAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,EAIE,oBAAC,MAAD,CAAQ,OAAR;AAAgB,IAAA,MAAM,MAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD;AACE,IAAA,KAAK,MADP;AAEE,IAAA,KAAK,MAFP;AAGE,IAAA,KAAK,EAAE,OAAO,KAAP,GAAe,OAHxB;AAIE,IAAA,OAAO,EAAE,OAAO,UAAP,GAAoB,QAJ/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAJF,CANF,CAXF,CADF,CADF;AAoCD,CArCD;;AAuCA,eAAeL,QAAQ,CAACC,aAAD,CAAvB","sourcesContent":["import React from 'react';\nimport {\n  Segment,\n  Item,\n  Header,\n  Button,\n  Grid,\n  Statistic,\n  Divider,\n  Reveal\n} from 'semantic-ui-react';\nimport { IProfile } from '../../app/models/profile';\nimport { observer } from 'mobx-react-lite';\n\ninterface IProps {\n  profile: IProfile\n}\n\nconst ProfileHeader: React.FC<IProps> = ({profile}) => {\n  return (\n    <Segment>\n      <Grid>\n        <Grid.Column width={12}>\n          <Item.Group>\n            <Item>\n              <Item.Image avatar size='small' src={profile.image || '/assets/user.png'} />\n              <Item.Content verticalAlign='middle'>\n                <Header as='h1'>{profile.displayName}</Header>\n              </Item.Content>\n            </Item>\n          </Item.Group>\n        </Grid.Column>\n        <Grid.Column width={4}>\n          <Statistic.Group widths={2}>\n            <Statistic label='Followers' value='5' />\n            <Statistic label='Following' value='42' />\n          </Statistic.Group>\n          <Divider />\n          <Reveal animated='move'>\n            <Reveal.Content visible style={{ width: '100%' }}>\n              <Button fluid color='teal' content='Following' />\n            </Reveal.Content>\n            <Reveal.Content hidden>\n              <Button\n                fluid\n                basic\n                color={true ? 'red' : 'green'}\n                content={true ? 'Unfollow' : 'Follow'}\n              />\n            </Reveal.Content>\n          </Reveal>\n        </Grid.Column>\n      </Grid>\n    </Segment>\n  );\n};\n\nexport default observer(ProfileHeader);"]},"metadata":{},"sourceType":"module"}